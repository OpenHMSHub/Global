{
  "custom": {
    "funcAddVolunteer": false
  },
  "params": {
    "congregationId": 108
  },
  "propConfig": {
    "custom.funcAddVolunteer": {
      "onChange": {
        "enabled": null,
        "script": "\tif currentValue.value:\n\t\tproject \u003d \"HMS\"\n\t\tcongregationId \u003d self.params.congregationId\n\t\tget_congregationName \u003d system.db.runPrepQuery(\"SELECT providerName FROM organization.Provider where id \u003d \"+str(congregationId))\n\t\tif get_congregationName.getRowCount() \u003e 0:\n\t\t\tcongregationName \u003d get_congregationName.getValueAt(0,0)\n\t\telse:\n\t\t\tcongregationName \u003d None\n\t\tfirstName \u003d self.getChild(\"root\").getChild(\"EmbedRow1\").props.params.firstName\n\t\tmiddleName \u003d self.getChild(\"root\").getChild(\"EmbedRow1\").props.params.middleName\n\t\tlastName \u003d self.getChild(\"root\").getChild(\"EmbedRow1\").props.params.lastName\n\t\tdob \u003d self.getChild(\"root\").getChild(\"EmbedRow1\").props.params.dob\n\t\tgender \u003d self.getChild(\"root\").getChild(\"EmbedRow1\").props.params.gender\n\t\taddress \u003d self.getChild(\"root\").getChild(\"EmbedRow2\").props.params.Address\n\t\tcity \u003d self.getChild(\"root\").getChild(\"EmbedRow2\").props.params.City\n\t\tzipcode \u003d self.getChild(\"root\").getChild(\"EmbedRow2\").props.params.zipcode\n\t\tprimaryPhone \u003d self.getChild(\"root\").getChild(\"EmbedRow3\").props.params.primaryPhone\n\t\teveningPhone \u003d self.getChild(\"root\").getChild(\"EmbedRow3\").props.params.eveningPhone\n\t\temail \u003d self.getChild(\"root\").getChild(\"EmbedRow3\").props.params.email\n\t\tpreferredCommunicationMethod \u003d self.getChild(\"root\").getChild(\"EmbedRow3\").props.params.preferredCommunicationMethod\n\t\tif preferredCommunicationMethod!\u003dNone:\n\t\t\tq \u003d system.db.runPrepQuery(\"SELECT communicationTypeName FROM humans.CommunicationType where id \u003d \"+str(preferredCommunicationMethod))\n\t\t\tpreferredCommunication \u003d q.getValueAt(0,0) if q.getRowCount()\u003e0 else None\n\t\telse:\n\t\t\tpreferredCommunication \u003d None\n\t\t\t\n\t\tif preferredCommunication \u003d\u003d \u0027Text Message\u0027:\n\t\t\tpreferredCommunication \u003d \u0027Text\u0027\n\t\tif preferredCommunication \u003d\u003d \u0027Phone Call\u0027:\n\t\t\tpreferredCommunication \u003d \u0027Call\u0027\n\t\t\t\n\t\tif dob !\u003d None and dob !\u003d \u0027\u0027:\n\t\t\tdob_quality \u003d 2\n\t\telse:\n\t\t\tdob_quality \u003d 6\n\t\t\t\n\t\tif dob \u003d\u003d \u0027\u0027:\n\t\t\tdob \u003d None\n\t\t\n\t\tif None in [firstName,lastName,address,city,zipcode,gender,primaryPhone,eveningPhone,email,preferredCommunicationMethod]:\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please fill in all the mandatory fields correctly before saving (Null Error).\"\n\t\telif firstName.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please fill in the Coordinator First Name before saving.\"\n\t\telif lastName.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please fill in the Coordinator Last Name before saving.\"\n\t\telif gender \u003c 0:\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please fill in the Coordinator Gender before saving.\"\n\t\telif address.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please fill in the Coordinator Address before saving.\"\n\t\telif city.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please fill in the Coordinator City before saving.\"\n\t\telif str(zipcode).strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please fill in the Coordinator Zipcode before saving.\"\n#\t\telif primaryPhone.strip() \u003d\u003d \"\":\n#\t\t\tvalid \u003d False\n#\t\t\terror_message \u003d \"Please fill in the Coordinator primary phone number before saving.\"\n#\t\telif eveningPhone.strip() \u003d\u003d \"\":\n#\t\t\tvalid \u003d False\n#\t\t\terror_message \u003d \"Please fill in the Coordinator evening phone number before saving.\"\n\t\telif primaryPhone.strip() \u003d\u003d \"\" and eveningPhone.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please fill in the Coordinator primary phone or evening/after hours phone before saving.\"\n\t\telif email.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please fill in the Coordinator email before saving.\"\n\t\telif congregationName \u003d\u003d None:\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Congregation not found (Null Error).\"\n\t\telif preferredCommunicationMethod \u003d\u003d \"\" or preferredCommunicationMethod \u003c 0:\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Please fill in the Coordinator preferred communication method before saving.\"\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t#system.perspective.print(\u0027valid: \u0027+str(error_message))\n\t\t\t\n\t\tif valid:\t\n\t\t\t#dob_formated \u003d system.date.format(dob,\u0027yyyy-MM-dd hh:mm:ss\u0027)\n\t\t\t#humanExist \u003d system.db.runPrepQuery(\"SELECT * FROM humans.Human where firstName \u003d \u0027\"+str(firstName)+\"\u0027 and lastName \u003d \u0027\"+str(lastName)+\"\u0027 and dob \u003d \u0027\"+str(dob_formated)+\"\u0027\")\n\t\t\thumanExist \u003d system.db.runPrepQuery(\"SELECT * FROM humans.Human where timeRetired is NULL and firstName \u003d \u0027\"+str(firstName)+\"\u0027 and lastName \u003d \u0027\"+str(lastName)+\"\u0027\")\n\t\t\tif humanExist.getRowCount() \u003c 1: ##if human not exist\n\t\t\t\t## Add human in humans.Human table\n\t\t\t\tpath \u003d \"WinterShelterGlobal/Coordinator/Insert New Human\"\n\t\t\t\tparameters \u003d {\"first_name\":firstName,\n\t\t\t\t\t\t\t\"middle_name\":middleName,\n\t\t\t\t\t\t\t\"last_name\":lastName,\n\t\t\t\t\t\t\t\"suffix_name\":None,\n\t\t\t\t\t\t\t\"nick_name\":None,\n\t\t\t\t\t\t\t\"dob\":dob,\n\t\t\t\t\t\t\t\"dob_quality\":dob_quality,\n\t\t\t\t\t\t\t\"ssn\":None,\n\t\t\t\t\t\t\t\"ssn_quality\":6, #Data Not collected\n\t\t\t\t\t\t\t\"gender_id\":gender,\n\t\t\t\t\t\t\t\"race_id\":8, #Data Not collected\n\t\t\t\t\t\t\t\"ethnicity_id\":4, #Data Not collected\n\t\t\t\t\t\t\t\"veteran_id\":4, #Data Not collected\n\t\t\t\t\t\t\t\"disability_id\":4, #Data Not collected\n\t\t\t\t\t\t\t\"phone\":primaryPhone,\n\t\t\t\t\t\t\t\"alt_phone\":eveningPhone,\n\t\t\t\t\t\t\t\"email\":email,\n\t\t\t\t\t\t\t\"preferredCommunication\":preferredCommunication,\n\t\t\t\t\t\t\t\"communication_type_id\":preferredCommunicationMethod,\n\t\t\t\t\t\t\t\"emergency_contact_name\":None,\n\t\t\t\t\t\t\t\"emergency_contact_email\":None,\n\t\t\t\t\t\t\t\"emergency_contact_phone\":None,\n\t\t\t\t\t\t\t\"emergency_contact_type_id\":6, #Data Not collected\n\t\t\t\t\t\t\t\"family_id\":None,\n\t\t\t\t\t\t\t\"hoh_relationship_id\":8, #Data Not collected\n\t\t\t\t\t\t\t\"full_register\":False,\n\t\t\t\t\t\t\t\"mentalHealth\":None,\n\t\t\t\t\t\t\t\"chronicHealthConditions\":None,\n\t\t\t\t\t\t\t\"physicalDisability\":None,\n\t\t\t\t\t\t\t\"developmentalDisability\":None,\n\t\t\t\t\t\t\t\"substanceAbuse\":None,\n\t\t\t\t\t\t\t\"lastHmisUpdateDate\":None,\n\t\t\t\t\t\t\t\"lastHmisUpdateBy\":None,\n\t\t\t\t\t\t\t\"viSpidatScore\":None,\n\t\t\t\t\t\t\t\"viSpidateAssessmentDate\":None,\n\t\t\t\t\t\t\t\"vaHealthCareEligible\":None,\n\t\t\t\t\t\t\t\"incomeSource\":None,\n\t\t\t\t\t\t\t\"incomeAmount\":None,\n\t\t\t\t\t\t\t\"incomeStartDate\":None,\n\t\t\t\t\t\t\t\"triMorbid\":None,\n\t\t\t\t\t\t\t\"biracialId\":None,\n\t\t\t\t\t\t\t\"zipCode\":zipcode,\n\t\t\t\t\t\t\t\"city\":city,\n\t\t\t\t\t\t\t\"street\":address}\n\t\t\t\thuman_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t##set congregationId in human table\n\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003d\"WinterShelterGlobal/Coordinator/Set CongregationId\",parameters\u003d{\"congregationId\":congregationId,\"human_id\":human_id})\n\t\t\t\t## add human to breeze, set tags and set breezeId in human table in discovery.\n\t\t\t\t#Integrations.breeze.helper.addHumanToBreeze(human_id, tags \u003d [\u0027Volunteer\u0027,str(congregationName)])\n\t\t\t\t## add human to staff.volunteer table\n\t\t\t\tvolunteer_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003d\"WinterShelterGlobal/Coordinator/Insert Staff Volunteer\",parameters\u003d{\"humanId\":human_id}, getKey\u003dTrue)\n\t\t\telse: ##if human exist\n\t\t\t\thuman_id \u003d humanExist.getValueAt(0,\u0027id\u0027)\n\t\t\t\tprev_congregationId \u003d humanExist.getValueAt(0,\u0027congregationId\u0027)\n\t\t\t\tif prev_congregationId !\u003d None and prev_congregationId !\u003d \u0027\u0027:\n\t\t\t\t\tget_prev_congregationName \u003d system.db.runPrepQuery(\"SELECT providerName FROM organization.Provider where id \u003d \"+str(prev_congregationId))\n\t\t\t\t\tprev_congregationName \u003d get_prev_congregationName.getValueAt(0,0) if get_prev_congregationName.getRowCount() \u003e 0 else None\n\t\t\t\telse:\n\t\t\t\t\tprev_congregationName \u003d \u0027\u0027\n\t\t\t\t\n\t\t\t\tbreezeId \u003d humanExist.getValueAt(0,\u0027breezeId\u0027)\n\t\t\t\t#update human details if change\n\t\t\t\tparams \u003d {\"human_id\":human_id,\n\t\t\t\t\t\t\"firstName\":firstName,\n\t\t\t\t\t\t\"middleName\":middleName,\n\t\t\t\t\t\t\"lastName\":lastName,\n\t\t\t\t\t\t\"dob\":dob,\n\t\t\t\t\t\t\"dob_quality\":dob_quality,\n\t\t\t\t\t\t\"gender\":gender,\n\t\t\t\t\t\t\"address\":address,\n\t\t\t\t\t\t\"city\":city,\n\t\t\t\t\t\t\"zipcode\":zipcode,\n\t\t\t\t\t\t\"primaryPhone\":primaryPhone,\n\t\t\t\t\t\t\"eveningPhone\":eveningPhone,\n\t\t\t\t\t\t\"email\":email,\n\t\t\t\t\t\t\"preferredCommunicationMethod\":preferredCommunicationMethod,\n\t\t\t\t\t\t\"preferredCommunication\":preferredCommunication}\n\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003d\"WinterShelterGlobal/Coordinator/Update Human\",parameters\u003dparams)\n\t\t\t\t\n\t\t\t\tif breezeId !\u003d None and breezeId !\u003d \u0027\u0027:\n\t\t\t\t\tvolunteer_idQ \u003d system.db.runPrepQuery(\"SELECT id FROM staff.Volunteer where humanId \u003d \"+str(human_id))\n\t\t\t\t\tif volunteer_idQ.getRowCount() \u003e 0:\n\t\t\t\t\t\tvolunteer_id \u003d volunteer_idQ.getValueAt(0,0)\n\t\t\t\t\t\tif str(prev_congregationId) !\u003d str(congregationId):\n\t\t\t\t\t\t\t##set congregationId in human table\n\t\t\t\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003d\"WinterShelterGlobal/Coordinator/Set CongregationId\",parameters\u003d{\"congregationId\":congregationId,\"human_id\":human_id})\t\n\t\t\t\t\t\t\t##remove previous congregation tag for that breezeId and add new\n\t\t\t\t\t\t\tprev_tagID \u003d Integrations.breeze.helper.getTagID(prev_congregationName)\n\t\t\t\t\t\t\tif prev_tagID is not None:\n\t\t\t\t\t\t\t\tIntegrations.breeze.helper.applyTagChanges(\"remove\", breezeId, prev_tagID)\n\t\t\t\t\t\t\ttagID \u003d Integrations.breeze.helper.getTagID(congregationName)\n\t\t\t\t\t\t\tif tagID is not None:\n\t\t\t\t\t\t\t\tIntegrations.breeze.helper.applyTagChanges(\"add\", breezeId, tagID)\t\n\t\t\t\t\telse:\n\t\t\t\t\t\t## add human to breeze, set tags and set breezeId in human table in discovery.\n\t\t\t\t\t\tIntegrations.breeze.helper.addHumanToBreeze(human_id, tags \u003d [\u0027Volunteer\u0027,str(congregationName)])\n\t\t\t\t\t\t##set congregationId in human table\n\t\t\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003d\"WinterShelterGlobal/Coordinator/Set CongregationId\",parameters\u003d{\"congregationId\":congregationId,\"human_id\":human_id})\t\n\t\t\t\t\t\t## add human to staff.volunteer table\n\t\t\t\t\t\tvolunteer_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003d\"WinterShelterGlobal/Coordinator/Insert Staff Volunteer\",parameters\u003d{\"humanId\":human_id}, getKey\u003dTrue)\t\t\t\t\t\n\t\t\t\telse:\n\t\t\t\t\t## add human to breeze, set tags and set breezeId in human table in discovery.\n\t\t\t\t\tIntegrations.breeze.helper.addHumanToBreeze(human_id, tags \u003d [\u0027Volunteer\u0027,str(congregationName)])\n\t\t\t\t\t##set congregationId in human table\n\t\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003d\"WinterShelterGlobal/Coordinator/Set CongregationId\",parameters\u003d{\"congregationId\":congregationId,\"human_id\":human_id})\t\n\t\t\t\t\t## add human to staff.volunteer table\n\t\t\t\t\tvolunteer_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003d\"WinterShelterGlobal/Coordinator/Insert Staff Volunteer\",parameters\u003d{\"humanId\":human_id}, getKey\u003dTrue)\n\t\t\t\t\t\t\n\t\t\tself.session.custom.filters.volunteerSearch.results.humanId \u003d human_id\n\t\t\tself.session.custom.filters.volunteerSearch.results.volunteerId \u003d volunteer_id\n\t\t\tself.session.custom.filters.volunteerSearch.results.volunteerSelected \u003d True\n\t\t\t#Reset the script trigger\n\t\t\tself.custom.funcAddVolunteer \u003d False\n#\t\t\tself.getChild(\"root\").getChild(\"Table\").refreshBinding(\u0027custom.sql_data\u0027)\n\t\t\tpayload \u003d {\u0027message\u0027:\"coordinator saved successfully.\"}\n\t\t\tsystem.perspective.sendMessage(\"showError\", payload\u003dpayload, scope\u003d\"session\")\n\t\t\tpopupId \u003d \u0027NewCoordinator\u0027\n\t\t\tsystem.perspective.closePopup(popupId)\n\t\telse:\n\t\t\tpayload \u003d {\u0027message\u0027:error_message}\n\t\t\tsystem.perspective.sendMessage(\"showError\", payload\u003dpayload, scope\u003d\"session\")\n\t\t\tself.custom.funcAddVolunteer \u003d False\n\t\t\t\n\t\t"
      },
      "persistent": true
    },
    "params.congregationId": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 700,
      "width": 1300
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Header"
        },
        "position": {
          "basis": "25px",
          "shrink": 0
        },
        "props": {
          "params": {
            "Text": "Add Coordinator"
          },
          "path": "1_globalTEMPLATES/Header/Header",
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbedRow1"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.dob": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.dob"
              },
              "type": "property"
            }
          },
          "props.params.firstName": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.firstName"
              },
              "type": "property"
            }
          },
          "props.params.gender": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.genderId"
              },
              "type": "property"
            }
          },
          "props.params.lastName": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.lastName"
              },
              "type": "property"
            }
          },
          "props.params.middleName": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.middleName"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "WinterShelterGlobal/Registration/NewCoordinatorPrimary/Row1",
          "style": {
            "marginLeft": "7px",
            "marginRight": "7px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbedRow2"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.Address": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.address"
              },
              "type": "property"
            }
          },
          "props.params.City": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.city"
              },
              "type": "property"
            }
          },
          "props.params.zipcode": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.zipcode"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "WinterShelterGlobal/Registration/NewCoordinatorPrimary/Row2",
          "style": {
            "marginLeft": "7px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbedRow3"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.email": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.email"
              },
              "type": "property"
            }
          },
          "props.params.eveningPhone": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.altphone"
              },
              "type": "property"
            }
          },
          "props.params.preferredCommunicationMethod": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.prefferedCommunication"
              },
              "type": "property"
            }
          },
          "props.params.primaryPhone": {
            "binding": {
              "config": {
                "path": "parent.custom.coordInfo.phone"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "WinterShelterGlobal/Registration/NewCoordinatorPrimary/Row3",
          "style": {
            "marginLeft": "7px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Embed_Buttons"
        },
        "position": {
          "basis": "50px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.funcAddVolunteer": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.funcAddVolunteer"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "WinterShelterGlobal/Registration/NewCoordinatorPrimary/Buttons",
          "style": {
            "classes": "InputCards/InputCard_NoBorder"
          }
        },
        "type": "ia.display.view"
      }
    ],
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "custom.coordInfo": {
        "binding": {
          "config": {
            "path": "./Table.props.selection.data"
          },
          "transforms": [
            {
              "code": "\tdata \u003d value\n\tif value!\u003d None and len(value)\u003e0:\n\t\t## if there are two methods take last one\n\t\tif data[0][\u0027preferredCommunication\u0027] !\u003d None and \u0027; \u0027 in data[0][\u0027preferredCommunication\u0027]:\n\t\t\tlastCommunicationMethod \u003d data[0][\u0027preferredCommunication\u0027].split(\u0027; \u0027)[-1]\n\t\telse:\n\t\t\tlastCommunicationMethod \u003d data[0][\u0027preferredCommunication\u0027]\n\t\t\t\n\t\t## convert text in format similar in database\n\t\tif lastCommunicationMethod \u003d\u003d \u0027Text\u0027:\n\t\t\tcommunicationMethod \u003d \u0027Text Message\u0027\n\t\telif lastCommunicationMethod \u003d\u003d \u0027Call\u0027:\n\t\t\tcommunicationMethod \u003d \u0027Phone Call\u0027\n\t\telse:\n\t\t\tcommunicationMethod \u003d lastCommunicationMethod\n\t\t\n\t\tq \u003d system.db.runPrepQuery(\"SELECT id FROM humans.CommunicationType where communicationTypeName \u003d \u0027\"+str(communicationMethod)+\"\u0027\")\n\t\tpreferredCommunication \u003d q.getValueAt(0,0) if q.getRowCount()\u003e0 else None\n\t\tcoordInfo \u003d { \u0027firstName\u0027: data[0][\u0027firstName\u0027],\n\t\t\t\t\t\t\u0027middleName\u0027: data[0][\u0027middleName\u0027],\n\t\t\t\t\t\t\u0027lastName\u0027: data[0][\u0027lastName\u0027],\n\t\t\t\t\t\t\u0027dob\u0027: system.date.parse(data[0][\u0027dob\u0027],\u0027MM/dd/yyyy\u0027) if (data[0][\u0027dob\u0027] !\u003d None and data[0][\u0027dob\u0027] !\u003d \u0027\u0027) else data[0][\u0027dob\u0027],\n\t\t\t\t\t\t\u0027genderId\u0027: data[0][\u0027genderId\u0027],\n\t\t\t\t\t\t\u0027address\u0027: data[0][\u0027address\u0027],\n\t\t\t\t\t\t\u0027city\u0027: data[0][\u0027city\u0027],\n\t\t\t\t\t\t\u0027zipcode\u0027: data[0][\u0027zipcode\u0027],\n\t\t\t\t\t\t\u0027phone\u0027: data[0][\u0027phone\u0027],\n\t\t\t\t\t\t\u0027altphone\u0027: data[0][\u0027eveningPhone\u0027],\n\t\t\t\t\t\t\u0027email\u0027: data[0][\u0027email\u0027],\n\t\t\t\t\t\t\u0027prefferedCommunication\u0027: preferredCommunication\n\t\t\t\t\t\t}\n\telse:\n\t\tcoordInfo \u003d { \u0027firstName\u0027: \u0027\u0027,\n\t\t\t\t\t\t\u0027middleName\u0027: \u0027\u0027,\n\t\t\t\t\t\t\u0027lastName\u0027: \u0027\u0027,\n\t\t\t\t\t\t\u0027dob\u0027: None,\n\t\t\t\t\t\t\u0027genderId\u0027: -1,\n\t\t\t\t\t\t\u0027address\u0027: \u0027\u0027,\n\t\t\t\t\t\t\u0027city\u0027: \u0027\u0027,\n\t\t\t\t\t\t\u0027zipcode\u0027: \u0027\u0027,\n\t\t\t\t\t\t\u0027phone\u0027: \u0027\u0027,\n\t\t\t\t\t\t\u0027altphone\u0027: \u0027\u0027,\n\t\t\t\t\t\t\u0027email\u0027: \u0027\u0027,\n\t\t\t\t\t\t\u0027prefferedCommunication\u0027:-1\n\t\t\t\t\t\t}\n\treturn coordInfo",
              "type": "script"
            }
          ],
          "type": "property"
        }
      }
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "ResetCoordInfo",
          "pageScope": true,
          "script": "\t# implement your handler here\n\tcoordInfo \u003d { \u0027firstName\u0027: \u0027\u0027,\n\t\t\t\t\t\u0027middleName\u0027: \u0027\u0027,\n\t\t\t\t\t\u0027lastName\u0027: \u0027\u0027,\n\t\t\t\t\t\u0027dob\u0027: None,\n\t\t\t\t\t\u0027genderId\u0027: -1,\n\t\t\t\t\t\u0027address\u0027: \u0027\u0027,\n\t\t\t\t\t\u0027city\u0027: \u0027\u0027,\n\t\t\t\t\t\u0027zipcode\u0027: \u0027\u0027,\n\t\t\t\t\t\u0027phone\u0027: \u0027\u0027,\n\t\t\t\t\t\u0027altphone\u0027: \u0027\u0027,\n\t\t\t\t\t\u0027email\u0027: \u0027\u0027,\n\t\t\t\t\t\u0027prefferedCommunication\u0027:-1\n\t\t\t\t\t}\n\tself.custom.coordInfo \u003d coordInfo",
          "sessionScope": true,
          "viewScope": true
        }
      ]
    },
    "type": "ia.container.flex"
  }
}